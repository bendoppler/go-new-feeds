version: '3.8'

services:
  web-app-client:
    build:
      context: ./cmd/webapp # Adjust path as necessary
      dockerfile: Dockerfile.web-app-client
    ports:
      - "3000:3000"
    depends_on:
      - user-friends-post-service
      - news-feed-service
    environment:
      - USER_FRIENDS_POST_SERVICE_URL=http://user-friends-post-service:8081
      - NEWS_FEED_SERVICE_URL=http://news-feed-service:8082

  user-friends-post-service:
    build:
      context: ./cmd/userPostFriends  # Adjust path as necessary
      dockerfile: Dockerfile.user-friends-post-service
    ports:
      - "8081:8081"
    env_file:
      - .env.newsfeed

  news-feed-service:
    build:
      context: ./cmd/newsFeed  # Adjust path as necessary
      dockerfile: Dockerfile.news-feed-service
    ports:
      - "8082:8082"
    env_file:
      - .env.newsfeed

  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - ./my.cnf:/etc/my.cnf
      - db-data:/var/lib/mysql
    ports:
      - "3306:3306"

  redis:
    image: redislabs/rebloom:latest
    ports:
      - "6379:6379"
    command: redis-server --loadmodule /usr/lib/redis/modules/redisbloom.so

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"  # MinIO Console/API
      - "9001:9001"  # MinIO Admin Console
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 10s
      retries: 3

  createbucket:
    image: minio/mc:latest
    container_name: createbucket
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 20 && \
      mc alias set myminio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY} && \
      mc ls myminio/${MINIO_BUCKET} || mc mb myminio/${MINIO_BUCKET}"
    environment:
      MC_HOST_minio: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: ${MINIO_BUCKET}

volumes:
  db-data:
  minio-data:
